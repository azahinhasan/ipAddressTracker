{"version":3,"sources":["components/map.js","components/IPaddressData.js","App.js","reportWebVitals.js","index.js"],"names":["AnyReactComponent","text","SimpleMap","style","height","width","bootstrapURLKeys","key","defaultCenter","this","props","center","defaultZoom","zoom","lat","lng","Component","defaultProps","IPaddressData","useState","ipAddress","setIpAddress","ipAddressDetails","setIpAddressDetails","useEffect","axios","get","then","result","console","log","data","Promise","resolve","fp","components","className","placeholder","query","onChange","event","target","value","onClick","status","org","ipType","city","country","continent","lon","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAyCMA,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,8BAAMA,KAExCC,E,4JASJ,WACE,OAEE,aADA,CACA,OAAKC,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAAtC,SACE,cAAC,IAAD,CACEC,iBAAkB,CAACC,IAAI,2CACvBC,cAAeC,KAAKC,MAAMC,OAC1BC,YAAaH,KAAKC,MAAMG,KAH1B,SAKE,cAAC,EAAD,CACEC,IAAK,UACLC,IAAK,UACLd,KAAK,sB,GArBOe,aAAlBd,EACGe,aAAe,CACpBN,OAAQ,CACNG,IAAK,MACLC,IAAK,OAEPF,KAAM,IAuBKX,I,kCC8BAgB,EA5FW,SAAAR,GAElB,MAAkCS,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgDF,mBAAS,IAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KAEAC,qBAAU,WACNC,IAAMC,IAAI,uCAAuCC,MAAK,SAAAC,GAClDC,QAAQC,IAAIF,GACZL,EAAoBK,EAAOG,WAGjC,IAEFP,qBAAU,WACN,IAAIQ,SAAQ,SAAAC,GACRC,IAAGR,KAAI,SAAAS,GACLF,EAAQE,GACRN,QAAQC,IAAIK,WAGpB,IAYF,OACE,sBAAKC,UAAU,GAAf,UACE,oDACA,uBAAK,uBACL,uBAAOC,YAAaf,EAAiBgB,MAAOC,SAdtB,SAAAC,GACtBnB,EAAamB,EAAMC,OAAOC,UAc1B,uBACA,wBAAQC,QAZa,SAAAH,GACrBf,IAAMC,IAAI,sCAAsCN,GAAWO,MAAK,SAAAC,GAC5DL,EAAoBK,EAAOG,UAU/B,kBAEA,wBAAOK,UAAU,YAAjB,UACY,+BACI,yCACA,6BAAKd,EAAiBsB,YAE1B,+BACI,6CACA,6BAAKtB,EAAiBgB,WAE1B,+BACI,sCACA,6BAAKhB,EAAiBuB,SAE1B,+BACI,0CACA,6BAAKvB,EAAiBwB,YAG1B,+BACI,+BAAI,uBAAJ,OACA,6BAAI,4BAER,+BACI,uCACA,6BAAKxB,EAAiByB,UAE1B,+BACI,0CACA,6BAAKzB,EAAiB0B,aAE1B,+BACI,4CACA,6BAAK1B,EAAiB2B,eAG1B,+BACI,2CACA,6BAAK3B,EAAiBR,SAE1B,+BACI,6CACA,6BAAKQ,EAAiB4B,YAMtC,mBAAGC,KAAK,iCAAiCV,OAAO,SAAhD,0BCpFGW,EATH,SAAA1C,GAGR,OACE,qBAAK0B,UAAU,MAAf,SACE,cAAC,EAAD,OCGOiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b33665fc.chunk.js","sourcesContent":["// import {Map, InfoWindow, Marker, GoogleApiWrapper,Polygon} from 'google-maps-react';\r\n \r\n// import {Component} from 'react';\r\n\r\n// export class MapContainer extends Component {\r\n//   render() {\r\n\r\n//     const triangleCoords = [\r\n//         {lat:23.7104, lng: 90.40744}\r\n//       ];\r\n\r\n//     return (\r\n//       <Map google={this.props.google}\r\n//        zoom={14}\r\n//        style={{width: '50%', height: '50%', position: 'relative'}}\r\n//        >\r\n \r\n//         <Marker onClick={this.onMarkerClick}\r\n//                 name={'Current location'} />\r\n \r\n//         <Polygon\r\n//           paths={triangleCoords}\r\n//           strokeColor=\"#0000FF\"\r\n//           strokeOpacity={0.8}\r\n//           strokeWeight={2}\r\n//           fillColor=\"#0000FF\"\r\n//           fillOpacity={0.35} />\r\n//       </Map>\r\n//     );\r\n//   }\r\n// }\r\n \r\n// export default GoogleApiWrapper({\r\n//     apiKey: (\"\")\r\n// })(MapContainer)\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\n \r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n \r\nclass SimpleMap extends Component {\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 59.95,\r\n      lng: 30.33\r\n    },\r\n    zoom: 11\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: '100vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{key:'AIzaSyA7TEXYBt1Z3I_-psmirU6Ims1RNdnFhTc'}}\r\n          defaultCenter={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        >\r\n          <AnyReactComponent\r\n            lat={59.955413}\r\n            lng={30.337844}\r\n            text=\"My Marker\"\r\n          />\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default SimpleMap;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState,useEffect,useReducer, useRef,useMemo } from 'react';\r\n//useContext in the header\r\nimport MAP from './map';\r\nimport axios from 'axios';\r\nimport fp from \"fingerprintjs2\";\r\nimport '../App.css';\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\n\r\n\r\n    const IPaddressData = props =>{\r\n\r\n        const [ipAddress, setIpAddress] = useState(\"\");\r\n        const [ipAddressDetails, setIpAddressDetails] = useState(\"\");\r\n\r\n        useEffect(() => {\r\n            axios.get('https://extreme-ip-lookup.com/json/').then(result =>{\r\n                console.log(result);\r\n                setIpAddressDetails(result.data);\r\n            });\r\n            \r\n        },[]);\r\n\r\n        useEffect(() => {\r\n            new Promise(resolve => {\r\n                fp.get(components => {\r\n                  resolve(components);\r\n                  console.log(components);\r\n                });\r\n            });\r\n        },[]);\r\n\r\n        const todoRemoveHandler = event =>{\r\n            setIpAddress(event.target.value);\r\n        }\r\n\r\n        const findButtonHandler= event =>{\r\n            axios.get('https://extreme-ip-lookup.com/json/'+ipAddress).then(result =>{\r\n                setIpAddressDetails(result.data);\r\n            });\r\n        }\r\n        \r\n        return (\r\n          <div className=\"\">\r\n            <h1>IP Address Tracker</h1>\r\n            <br/><br/>\r\n            <input placeholder={ipAddressDetails.query} onChange={todoRemoveHandler}/>\r\n            <br/>\r\n            <button onClick={findButtonHandler}>Find</button>\r\n\r\n            <table className=\"mainTable\">  \r\n                        <tr>\r\n                            <td>Status </td>\r\n                            <td>{ipAddressDetails.status}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>IP Address </td>\r\n                            <td>{ipAddressDetails.query}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>ISP </td>\r\n                            <td>{ipAddressDetails.org}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>IP Type </td>\r\n                            <td>{ipAddressDetails.ipType}</td>\r\n                        </tr>\r\n                       \r\n                        <tr>\r\n                            <td><hr/> </td>\r\n                            <td><hr/></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>City </td>\r\n                            <td>{ipAddressDetails.city}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Country </td>\r\n                            <td>{ipAddressDetails.country}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Continent </td>\r\n                            <td>{ipAddressDetails.continent}</td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td>Latitude </td>\r\n                            <td>{ipAddressDetails.lat}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Longitude  </td>\r\n                            <td>{ipAddressDetails.lon}</td>\r\n                        </tr>\r\n                \r\n            </table>\r\n\r\n            {/* <MAP/> */}\r\n            <a href=\"https://aboutme-b0750.web.app/\" target=\"_blank\">About Me</a>\r\n          </div>\r\n        );\r\n    } \r\n\r\nexport default IPaddressData;\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport IPaddressData from './components/IPaddressData';\n\nconst App = props =>{\n\n\n    return (\n      <div className=\"App\">\n        <IPaddressData/>\n      </div>\n    );\n} \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}